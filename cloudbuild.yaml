steps:
- id: build
  name: golang:1.18
  dir: "docserver/src"
  args: ["go", "build", "-o", "docserver", "."]
- id: containerize
  name: gcr.io/cloud-builders/docker
  args: ["build", "-f", "./docserver/Dockerfile",
    "--build-arg", "environment=${_ENV}",
    "-t", "us-central1-docker.pkg.dev/${PROJECT_ID}/release/$_SERVICE:latest",
    "-t", "us-central1-docker.pkg.dev/${PROJECT_ID}/release/$_SERVICE:build-$BUILD_ID",
    "."]
- id: push
  name: gcr.io/cloud-builders/docker
  args: ["push", "-a", "us-central1-docker.pkg.dev/${PROJECT_ID}/release/$_SERVICE"]
- id: deploy
  name: gcr.io/cloud-builders/gcloud
  args: ["run", "deploy", "$_SERVICE",
    "--image=us-central1-docker.pkg.dev/${PROJECT_ID}/release/$_SERVICE:build-$BUILD_ID",
    "--platform=managed",
    "--concurrency=default",
    "--max-instances=default",
    "--region=us-central1",
    "--port=default",
    "--timeout=60s",
    "--allow-unauthenticated",
    "--service-account=$_SERVICE_ACCOUNT",
    '--set-env-vars=
    DACS_STATICFILEDIRECTORY=/var/www/static,
    DACS_DEMODIRECTORY="",
    DACS_PROJECTBUCKET=$_GCS_BUCKET',
  ]
substitutions:
  _SERVICE: docs-as-code-server
  _SERVICE_ACCOUNT: docs-as-code-server@docs-as-code-agosto.iam.gserviceaccount.com
  _GCS_BUCKET: agosto-docs-as-code
  _ENV: prod
options:
  env:
    - GOPROXY=https://proxy.golang.org